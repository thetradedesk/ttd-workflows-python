"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from ttd_workflows.models.components import httpmetadata as components_httpmetadata
from ttd_workflows.types import BaseModel
from ttd_workflows.utils import FieldMetadata, QueryParamMetadata, RequestMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ArchiveAdGroupsRequestTypedDict(TypedDict):
    force_archive: NotRequired[bool]
    request_body: NotRequired[List[str]]


class ArchiveAdGroupsRequest(BaseModel):
    force_archive: Annotated[
        Optional[bool],
        pydantic.Field(alias="forceArchive"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = False

    request_body: Annotated[
        Optional[List[str]],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


class ArchiveAdGroupsResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    strings: NotRequired[List[str]]
    r"""OK"""


class ArchiveAdGroupsResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    strings: Optional[List[str]] = None
    r"""OK"""
