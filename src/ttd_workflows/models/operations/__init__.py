"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from typing import TYPE_CHECKING
from importlib import import_module

if TYPE_CHECKING:
    from .archiveadgroups import (
        ArchiveAdGroupsRequest,
        ArchiveAdGroupsRequestTypedDict,
        ArchiveAdGroupsResponse,
        ArchiveAdGroupsResponseTypedDict,
    )
    from .archivecampaigns import (
        ArchiveCampaignsRequest,
        ArchiveCampaignsRequestTypedDict,
        ArchiveCampaignsResponse,
        ArchiveCampaignsResponseTypedDict,
    )
    from .createadgroup import CreateAdGroupResponse, CreateAdGroupResponseTypedDict
    from .createadgroupsjob import (
        CreateAdGroupsJobResponse,
        CreateAdGroupsJobResponseTypedDict,
    )
    from .createcampaign import CreateCampaignResponse, CreateCampaignResponseTypedDict
    from .createcampaignsjob import (
        CreateCampaignsJobResponse,
        CreateCampaignsJobResponseTypedDict,
    )
    from .getcampaignversion import (
        GetCampaignVersionRequest,
        GetCampaignVersionRequestTypedDict,
        GetCampaignVersionResponse,
        GetCampaignVersionResponseTypedDict,
    )
    from .getfirstpartydatajob import (
        GetFirstPartyDataJobResponse,
        GetFirstPartyDataJobResponseTypedDict,
    )
    from .getgraphqlqueryjobstatus import (
        GetGraphQlQueryJobStatusRequest,
        GetGraphQlQueryJobStatusRequestTypedDict,
        GetGraphQlQueryJobStatusResponse,
        GetGraphQlQueryJobStatusResponseTypedDict,
    )
    from .getjobstatus import (
        GetJobStatusRequest,
        GetJobStatusRequestTypedDict,
        GetJobStatusResponse,
        GetJobStatusResponseTypedDict,
    )
    from .getthirdpartydatajob import (
        GetThirdPartyDataJobResponse,
        GetThirdPartyDataJobResponseTypedDict,
    )
    from .submitgraphqlqueryjob import (
        SubmitGraphQlQueryJobResponse,
        SubmitGraphQlQueryJobResponseTypedDict,
    )
    from .submitgraphqlrequest import (
        SubmitGraphQlRequestResponse,
        SubmitGraphQlRequestResponseBody,
        SubmitGraphQlRequestResponseBodyTypedDict,
        SubmitGraphQlRequestResponseTypedDict,
    )
    from .submitrestrequest import (
        SubmitRestRequestResponse,
        SubmitRestRequestResponseBody,
        SubmitRestRequestResponseBodyTypedDict,
        SubmitRestRequestResponseTypedDict,
    )
    from .updateadgroup import UpdateAdGroupResponse, UpdateAdGroupResponseTypedDict
    from .updateadgroupsjob import (
        UpdateAdGroupsJobResponse,
        UpdateAdGroupsJobResponseTypedDict,
    )
    from .updatecampaign import UpdateCampaignResponse, UpdateCampaignResponseTypedDict
    from .updatecampaignsjob import (
        UpdateCampaignsJobResponse,
        UpdateCampaignsJobResponseTypedDict,
    )

__all__ = [
    "ArchiveAdGroupsRequest",
    "ArchiveAdGroupsRequestTypedDict",
    "ArchiveAdGroupsResponse",
    "ArchiveAdGroupsResponseTypedDict",
    "ArchiveCampaignsRequest",
    "ArchiveCampaignsRequestTypedDict",
    "ArchiveCampaignsResponse",
    "ArchiveCampaignsResponseTypedDict",
    "CreateAdGroupResponse",
    "CreateAdGroupResponseTypedDict",
    "CreateAdGroupsJobResponse",
    "CreateAdGroupsJobResponseTypedDict",
    "CreateCampaignResponse",
    "CreateCampaignResponseTypedDict",
    "CreateCampaignsJobResponse",
    "CreateCampaignsJobResponseTypedDict",
    "GetCampaignVersionRequest",
    "GetCampaignVersionRequestTypedDict",
    "GetCampaignVersionResponse",
    "GetCampaignVersionResponseTypedDict",
    "GetFirstPartyDataJobResponse",
    "GetFirstPartyDataJobResponseTypedDict",
    "GetGraphQlQueryJobStatusRequest",
    "GetGraphQlQueryJobStatusRequestTypedDict",
    "GetGraphQlQueryJobStatusResponse",
    "GetGraphQlQueryJobStatusResponseTypedDict",
    "GetJobStatusRequest",
    "GetJobStatusRequestTypedDict",
    "GetJobStatusResponse",
    "GetJobStatusResponseTypedDict",
    "GetThirdPartyDataJobResponse",
    "GetThirdPartyDataJobResponseTypedDict",
    "SubmitGraphQlQueryJobResponse",
    "SubmitGraphQlQueryJobResponseTypedDict",
    "SubmitGraphQlRequestResponse",
    "SubmitGraphQlRequestResponseBody",
    "SubmitGraphQlRequestResponseBodyTypedDict",
    "SubmitGraphQlRequestResponseTypedDict",
    "SubmitRestRequestResponse",
    "SubmitRestRequestResponseBody",
    "SubmitRestRequestResponseBodyTypedDict",
    "SubmitRestRequestResponseTypedDict",
    "UpdateAdGroupResponse",
    "UpdateAdGroupResponseTypedDict",
    "UpdateAdGroupsJobResponse",
    "UpdateAdGroupsJobResponseTypedDict",
    "UpdateCampaignResponse",
    "UpdateCampaignResponseTypedDict",
    "UpdateCampaignsJobResponse",
    "UpdateCampaignsJobResponseTypedDict",
]

_dynamic_imports: dict[str, str] = {
    "ArchiveAdGroupsRequest": ".archiveadgroups",
    "ArchiveAdGroupsRequestTypedDict": ".archiveadgroups",
    "ArchiveAdGroupsResponse": ".archiveadgroups",
    "ArchiveAdGroupsResponseTypedDict": ".archiveadgroups",
    "ArchiveCampaignsRequest": ".archivecampaigns",
    "ArchiveCampaignsRequestTypedDict": ".archivecampaigns",
    "ArchiveCampaignsResponse": ".archivecampaigns",
    "ArchiveCampaignsResponseTypedDict": ".archivecampaigns",
    "CreateAdGroupResponse": ".createadgroup",
    "CreateAdGroupResponseTypedDict": ".createadgroup",
    "CreateAdGroupsJobResponse": ".createadgroupsjob",
    "CreateAdGroupsJobResponseTypedDict": ".createadgroupsjob",
    "CreateCampaignResponse": ".createcampaign",
    "CreateCampaignResponseTypedDict": ".createcampaign",
    "CreateCampaignsJobResponse": ".createcampaignsjob",
    "CreateCampaignsJobResponseTypedDict": ".createcampaignsjob",
    "GetCampaignVersionRequest": ".getcampaignversion",
    "GetCampaignVersionRequestTypedDict": ".getcampaignversion",
    "GetCampaignVersionResponse": ".getcampaignversion",
    "GetCampaignVersionResponseTypedDict": ".getcampaignversion",
    "GetFirstPartyDataJobResponse": ".getfirstpartydatajob",
    "GetFirstPartyDataJobResponseTypedDict": ".getfirstpartydatajob",
    "GetGraphQlQueryJobStatusRequest": ".getgraphqlqueryjobstatus",
    "GetGraphQlQueryJobStatusRequestTypedDict": ".getgraphqlqueryjobstatus",
    "GetGraphQlQueryJobStatusResponse": ".getgraphqlqueryjobstatus",
    "GetGraphQlQueryJobStatusResponseTypedDict": ".getgraphqlqueryjobstatus",
    "GetJobStatusRequest": ".getjobstatus",
    "GetJobStatusRequestTypedDict": ".getjobstatus",
    "GetJobStatusResponse": ".getjobstatus",
    "GetJobStatusResponseTypedDict": ".getjobstatus",
    "GetThirdPartyDataJobResponse": ".getthirdpartydatajob",
    "GetThirdPartyDataJobResponseTypedDict": ".getthirdpartydatajob",
    "SubmitGraphQlQueryJobResponse": ".submitgraphqlqueryjob",
    "SubmitGraphQlQueryJobResponseTypedDict": ".submitgraphqlqueryjob",
    "SubmitGraphQlRequestResponse": ".submitgraphqlrequest",
    "SubmitGraphQlRequestResponseBody": ".submitgraphqlrequest",
    "SubmitGraphQlRequestResponseBodyTypedDict": ".submitgraphqlrequest",
    "SubmitGraphQlRequestResponseTypedDict": ".submitgraphqlrequest",
    "SubmitRestRequestResponse": ".submitrestrequest",
    "SubmitRestRequestResponseBody": ".submitrestrequest",
    "SubmitRestRequestResponseBodyTypedDict": ".submitrestrequest",
    "SubmitRestRequestResponseTypedDict": ".submitrestrequest",
    "UpdateAdGroupResponse": ".updateadgroup",
    "UpdateAdGroupResponseTypedDict": ".updateadgroup",
    "UpdateAdGroupsJobResponse": ".updateadgroupsjob",
    "UpdateAdGroupsJobResponseTypedDict": ".updateadgroupsjob",
    "UpdateCampaignResponse": ".updatecampaign",
    "UpdateCampaignResponseTypedDict": ".updatecampaign",
    "UpdateCampaignsJobResponse": ".updatecampaignsjob",
    "UpdateCampaignsJobResponseTypedDict": ".updatecampaignsjob",
}


def __getattr__(attr_name: str) -> object:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(
            f"No {attr_name} found in _dynamic_imports for module name -> {__name__} "
        )

    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(
            f"Failed to import {attr_name} from {module_name}: {e}"
        ) from e
    except AttributeError as e:
        raise AttributeError(
            f"Failed to get {attr_name} from {module_name}: {e}"
        ) from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)
