"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from ttd_workflows.models.components import (
    graphqlqueryjobretrievalresponse as components_graphqlqueryjobretrievalresponse,
    httpmetadata as components_httpmetadata,
)
from ttd_workflows.types import BaseModel
from ttd_workflows.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetGraphQlQueryJobStatusRequestTypedDict(TypedDict):
    id: str


class GetGraphQlQueryJobStatusRequest(BaseModel):
    id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GetGraphQlQueryJobStatusResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    graph_ql_query_job_retrieval_response: NotRequired[
        components_graphqlqueryjobretrievalresponse.GraphQLQueryJobRetrievalResponseTypedDict
    ]
    r"""OK"""


class GetGraphQlQueryJobStatusResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    graph_ql_query_job_retrieval_response: Optional[
        components_graphqlqueryjobretrievalresponse.GraphQLQueryJobRetrievalResponse
    ] = None
    r"""OK"""
