"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
from .standardjobstatusresponse import (
    StandardJobStatusResponse,
    StandardJobStatusResponseTypedDict,
)
import pydantic
from ttd_workflows.types import BaseModel
from ttd_workflows.utils import FieldMetadata, PathParamMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetJobStatusRequestTypedDict(TypedDict):
    id: int


class GetJobStatusRequest(BaseModel):
    id: Annotated[
        int, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]


class GetJobStatusResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    standard_job_status_response: NotRequired[StandardJobStatusResponseTypedDict]
    r"""OK"""


class GetJobStatusResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    standard_job_status_response: Optional[StandardJobStatusResponse] = None
    r"""OK"""
